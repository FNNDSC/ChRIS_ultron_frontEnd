"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e["default"]:e}function pick(e,r){for(var t={},o=0,n=r.length;n>o;o++){var s=r[o];s in e&&(t[s]=e[s])}return t}function isChromeApp(){return"undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage&&"undefined"!=typeof chrome.storage.local}function hasLocalStorage(){return hasLocal}function attachBrowserEvents(e){isChromeApp()?chrome.storage.onChanged.addListener(function(r){null!=r.db_name&&e.emit(r.dbName.newValue)}):hasLocalStorage()&&("undefined"!=typeof addEventListener?addEventListener("storage",function(r){e.emit(r.key)}):window.attachEvent("storage",function(r){e.emit(r.key)}))}function Changes(){events.EventEmitter.call(this),this._listeners={},attachBrowserEvents(this)}function guardedConsole(e){if("undefined"!==console&&e in console){var r=Array.prototype.slice.call(arguments,1);console[e].apply(console,r)}}function explainError(e,r){guardedConsole("info","The above "+e+" is totally normal. "+r)}function PouchError(e){Error.call(this,e.reason),this.status=e.status,this.name=e.error,this.message=e.reason,this.error=!0}function updateCheckpoint(e,r,t,o,n){return e.get(r)["catch"](function(t){if(404===t.status)return"http"===e.type()&&explainError(404,"PouchDB is just checking if a remote checkpoint exists."),{session_id:o,_id:r,history:[],replicator:REPLICATOR,version:CHECKPOINT_VERSION};throw t}).then(function(s){return n.cancelled?void 0:(s.history=(s.history||[]).filter(function(e){return e.session_id!==o}),s.history.unshift({last_seq:t,session_id:o}),s.history=s.history.slice(0,CHECKPOINT_HISTORY_SIZE),s.version=CHECKPOINT_VERSION,s.replicator=REPLICATOR,s.session_id=o,s.last_seq=t,e.put(s)["catch"](function(s){if(409===s.status)return updateCheckpoint(e,r,t,o,n);throw s}))})}function Checkpointer(e,r,t,o){this.src=e,this.target=r,this.id=t,this.returnValue=o}function compareReplicationLogs(e,r){return e.session_id===r.session_id?{last_seq:e.last_seq,history:e.history}:compareReplicationHistory(e.history,r.history)}function compareReplicationHistory(e,r){var t=e[0],o=e.slice(1),n=r[0],s=r.slice(1);if(!t||0===r.length)return{last_seq:LOWEST_SEQ,history:[]};var i=t.session_id;if(hasSessionId(i,r))return{last_seq:t.last_seq,history:e};var a=n.session_id;return hasSessionId(a,o)?{last_seq:n.last_seq,history:s}:compareReplicationHistory(o,s)}function hasSessionId(e,r){var t=r[0],o=r.slice(1);return e&&0!==r.length?e===t.session_id?!0:hasSessionId(e,o):!1}function isForbiddenError(e){return"number"==typeof e.status&&4===Math.floor(e.status/100)}var lie=_interopDefault(require("lie")),getArguments=_interopDefault(require("argsarray")),debug=_interopDefault(require("debug")),events=require("events"),inherits=_interopDefault(require("inherits")),pouchdbCollate=require("pouchdb-collate"),PouchPromise="function"==typeof Promise?Promise:lie,funcToString=Function.prototype.toString,objectCtorString=funcToString.call(Object),log=debug("pouchdb:api"),hasLocal;if(isChromeApp())hasLocal=!1;else try{localStorage.setItem("_pouch_check_localstorage",1),hasLocal=!!localStorage.getItem("_pouch_check_localstorage")}catch(e){hasLocal=!1}inherits(Changes,events.EventEmitter),Changes.prototype.addListener=function(e,r,t,o){function n(){function e(){i=!1}if(s._listeners[r]){if(i)return void(i="waiting");i=!0;var a=pick(o,["style","include_docs","attachments","conflicts","filter","doc_ids","view","since","query_params","binary"]);t.changes(a).on("change",function(e){e.seq>o.since&&!o.cancelled&&(o.since=e.seq,o.onChange(e))}).on("complete",function(){"waiting"===i&&setTimeout(function(){n()},0),i=!1}).on("error",e)}}if(!this._listeners[r]){var s=this,i=!1;this._listeners[r]=n,this.on(e,n)}},Changes.prototype.removeListener=function(e,r){r in this._listeners&&events.EventEmitter.prototype.removeListener.call(this,e,this._listeners[r])},Changes.prototype.notifyLocalWindows=function(e){isChromeApp()?chrome.storage.local.set({dbName:e}):hasLocalStorage()&&(localStorage[e]="a"===localStorage[e]?"b":"a")},Changes.prototype.notify=function(e){this.emit(e),this.notifyLocalWindows(e)},inherits(PouchError,Error),PouchError.prototype.toString=function(){return JSON.stringify({status:this.status,name:this.name,message:this.message,reason:this.reason})};var UNAUTHORIZED=new PouchError({status:401,error:"unauthorized",reason:"Name or password is incorrect."}),MISSING_BULK_DOCS=new PouchError({status:400,error:"bad_request",reason:"Missing JSON list of 'docs'"}),MISSING_DOC=new PouchError({status:404,error:"not_found",reason:"missing"}),REV_CONFLICT=new PouchError({status:409,error:"conflict",reason:"Document update conflict"}),INVALID_ID=new PouchError({status:400,error:"invalid_id",reason:"_id field must contain a string"}),MISSING_ID=new PouchError({status:412,error:"missing_id",reason:"_id is required for puts"}),RESERVED_ID=new PouchError({status:400,error:"bad_request",reason:"Only reserved document ids may start with underscore."}),NOT_OPEN=new PouchError({status:412,error:"precondition_failed",reason:"Database not open"}),UNKNOWN_ERROR=new PouchError({status:500,error:"unknown_error",reason:"Database encountered an unknown error"}),BAD_ARG=new PouchError({status:500,error:"badarg",reason:"Some query argument is invalid"}),INVALID_REQUEST=new PouchError({status:400,error:"invalid_request",reason:"Request was invalid"}),QUERY_PARSE_ERROR=new PouchError({status:400,error:"query_parse_error",reason:"Some query parameter is invalid"}),DOC_VALIDATION=new PouchError({status:500,error:"doc_validation",reason:"Bad special document member"}),BAD_REQUEST=new PouchError({status:400,error:"bad_request",reason:"Something wrong with the request"}),NOT_AN_OBJECT=new PouchError({status:400,error:"bad_request",reason:"Document must be a JSON object"}),DB_MISSING=new PouchError({status:404,error:"not_found",reason:"Database not found"}),IDB_ERROR=new PouchError({status:500,error:"indexed_db_went_bad",reason:"unknown"}),WSQ_ERROR=new PouchError({status:500,error:"web_sql_went_bad",reason:"unknown"}),LDB_ERROR=new PouchError({status:500,error:"levelDB_went_went_bad",reason:"unknown"}),FORBIDDEN=new PouchError({status:403,error:"forbidden",reason:"Forbidden by design doc validate_doc_update function"}),INVALID_REV=new PouchError({status:400,error:"bad_request",reason:"Invalid rev format"}),FILE_EXISTS=new PouchError({status:412,error:"file_exists",reason:"The database could not be created, the file already exists."}),MISSING_STUB=new PouchError({status:412,error:"missing_stub"}),INVALID_URL=new PouchError({status:413,error:"invalid_url",reason:"Provided URL is invalid"}),allErrors=[UNAUTHORIZED,MISSING_BULK_DOCS,MISSING_DOC,REV_CONFLICT,INVALID_ID,MISSING_ID,RESERVED_ID,NOT_OPEN,UNKNOWN_ERROR,BAD_ARG,INVALID_REQUEST,QUERY_PARSE_ERROR,DOC_VALIDATION,BAD_REQUEST,NOT_AN_OBJECT,DB_MISSING,WSQ_ERROR,LDB_ERROR,FORBIDDEN,INVALID_REV,FILE_EXISTS,MISSING_STUB,IDB_ERROR,INVALID_URL],chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),CHECKPOINT_VERSION=1,REPLICATOR="pouchdb",CHECKPOINT_HISTORY_SIZE=5,LOWEST_SEQ=0;Checkpointer.prototype.writeCheckpoint=function(e,r){var t=this;return this.updateTarget(e,r).then(function(){return t.updateSource(e,r)})},Checkpointer.prototype.updateTarget=function(e,r){return updateCheckpoint(this.target,this.id,e,r,this.returnValue)},Checkpointer.prototype.updateSource=function(e,r){var t=this;return this.readOnlySource?PouchPromise.resolve(!0):updateCheckpoint(this.src,this.id,e,r,this.returnValue)["catch"](function(e){if(isForbiddenError(e))return t.readOnlySource=!0,!0;throw e})};var comparisons={undefined:function(e,r){return 0===pouchdbCollate.collate(e.last_seq,r.last_seq)?r.last_seq:0},1:function(e,r){return compareReplicationLogs(r,e).last_seq}};Checkpointer.prototype.getCheckpoint=function(){var e=this;return e.target.get(e.id).then(function(r){return e.readOnlySource?PouchPromise.resolve(r.last_seq):e.src.get(e.id).then(function(e){if(r.version!==e.version)return LOWEST_SEQ;var t;return t=r.version?r.version.toString():"undefined",t in comparisons?comparisons[t](r,e):LOWEST_SEQ},function(t){if(404===t.status&&r.last_seq)return e.src.put({_id:e.id,last_seq:LOWEST_SEQ}).then(function(){return LOWEST_SEQ},function(t){return isForbiddenError(t)?(e.readOnlySource=!0,r.last_seq):LOWEST_SEQ});throw t})})["catch"](function(e){if(404!==e.status)throw e;return LOWEST_SEQ})},module.exports=Checkpointer;